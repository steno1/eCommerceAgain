import { ORDER_URL } from "../constant";
import { PAYPAL } from "../constant";
import { apiSlice } from "./apiSlice";

// Creating an orderApiSlice using the injectEndpoints function from apiSlice
const orderApiSlice = apiSlice.injectEndpoints({
  endpoints: (builder) => ({
    // Configuration for creating an order
    createOrder: builder.mutation({
      query: (order) => ({
        url: ORDER_URL,
        method: "POST",
        body: { ...order }
      })
    }),
    getOrderDetails:builder.query({
      query:(orderId)=>({
        url:`${ORDER_URL}/${orderId}`
      }),
      keepUnusedDataFor:5
    }),
    payOrder:builder.mutation({
      query:({orderId, details})=>({
        url:`${ORDER_URL}/${orderId}/pay`,
        method:'PUT',
        body:{...details}

      })
    }),
    getPayClientId:builder.query({
      query:()=>({
        url:PAYPAL,
      }),
      keepUnusedDataFor:5
    }),
    getMyOrders:builder.query({
      query:()=>({
        url:`${ORDER_URL}/mine`
      }),
      keepUnusedDataFor:5
    }),
   
  })
});

// Exporting specific hooks generated by orderApiSlice for use in components
export const { useCreateOrderMutation,
   useGetOrderDetailsQuery, 
   useGetPayClientIdQuery, 
   usePayOrderMutation, useGetMyOrdersQuery} = orderApiSlice;
